raylib := loadLibrary("/usr/lib/libraylib.so");

TColor := struct {
    r = "u8",
    g = "u8",
    b = "u8",
    a = "u8",
};

def Color(r g b a)
    return struct {r=r, g=g, b=b, a=a};
end

def unloadRaylib()
    unloadLibrary(raylib);
end

initWindow := loadLibraryFunc(raylib, "void", "InitWindow", {"i32", "i32", "pointer"});
quitWindow := loadLibraryFunc(raylib, "void", "CloseWindow", {});
beginDrawing := loadLibraryFunc(raylib, "void", "BeginDrawing", {});
endDrawing := loadLibraryFunc(raylib, "void", "EndDrawing", {});
windowShouldClose := loadLibraryFunc(raylib, "u8", "WindowShouldClose", {});
drawFPS := loadLibraryFunc(raylib, "void", "DrawFPS", {"i32", "i32"});
setTargetFPS := loadLibraryFunc(raylib, "void", "SetTargetFPS", {"i32"});
getScreenWidth := loadLibraryFunc(raylib, "i32", "GetScreenWidth", {});
getScreenHeight := loadLibraryFunc(raylib, "i32", "GetScreenHeight", {});
drawText := loadLibraryFunc(raylib, "void", "DrawText", {"pointer", "i32", "i32", "i32", TColor});
clearBackground := loadLibraryFunc(raylib, "void", "ClearBackground", {TColor});
drawRectangle := loadLibraryFunc(raylib, "void", "DrawRectangle", {"i32", "i32", "i32", "i32", TColor});
getMouseX := loadLibraryFunc(raylib, "i32", "GetMouseX", {});
getMouseY := loadLibraryFunc(raylib, "i32", "GetMouseY", {});
