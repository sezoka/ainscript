def variables()
    println("VARIABLES");
    number := 123.456;
    println(number);
    x := 123 * 6;
    y := 2 + 2 * 2;
    println(x + y);
    assert(2 + 2 == 4, "2 + 2 is 4");
    assert(0.2 + 0.1 == 0.3, "math is broken");

    block
        x := 2;
        println(x);
    end
end

def factorial(n)
    if n == 1
        return 1;
    end 

    return n * factorial(n - 1);
end

def functions()
    def noArguments()
        return 123;
    end

    def withArguments(a b c)
        return a + b + c;
    end

    def fib(n)
        if n <= 1
            return n;
        end
        return fib(n - 1) + fib(n - 2);
    end

    def varArgsFunc(a b ..rest)
        println("varargs:", a, b, rest);
        return rest;
    end

    def emptyVarArgs(..rest)
        println("emptyVarArgs", rest);
        return rest;
    end


    println(noArguments());
    println(withArguments(1, 2, 3));
    println(factorial(5));
    println(fib(10));
    println(emptyVarArgs()); // TODO
end

def arrays()
    arr := {1, 2, factorial(5), 4, 5, 6};
    println(arr);
    access := arr[2];
    println(access);
    access2 := {0, 1, 69, 3}[+-+-3];
    println(access2);
end

def closure()
    def makeCounter()
        counter := 0;

        def inc()
            counter = counter + 1;
            return counter;
        end

        return inc;
    end

    counter := makeCounter();
    println(counter());
    println(counter());
    println(counter());
    println(counter());
end

def strings()
    str := "Hello, World!";
    println(str);
end

def structs()
    def Color(r g b a)
        return struct {
            r = r,
            g = g,
            b = b,
            a = a,
        };
    end

    color := Color(100, 200, 123, 255);

    println("color", color);
end

def raylibExample()
    rl := import("../vendor/raylib.ais");

    rl.initWindow(800, 600, "hello from AinScript!");
    rl.setTargetFPS(120);

    text_x := 100;
    text_y := 100;

    scr_w := rl.getScreenWidth();
    scr_h := rl.getScreenHeight();

    while rl.windowShouldClose() == 0
        rl.beginDrawing();
        rl.clearBackground(rl.Color(18, 18, 18, 255));
        rl.drawText("Hello From AinScript!", text_x, text_y, 28, rl.Color(255, 255, 255, 255));
        rl.drawRectangle(rl.getMouseX() - 50, rl.getMouseY() - 50, 100, 100, rl.Color(0, 255, 255, 255));
        rl.drawFPS(16, 16);
        rl.endDrawing();
    end
    
    rl.quitWindow();
    rl.unloadRaylib();
end

def linkedList()
    def makeNode(val next)
        return struct {
            val = val,
            next = next,
        };
    end

    root := makeNode(1, nil);
    root = makeNode(2, root);
    root = makeNode(3, root);
    root = makeNode(4, root);
    root = makeNode(5, root);
    root = makeNode(6, root);

    while root != nil
        // println(root.val);
        root = root.next;
    end
end

def fileImportTest()
    lib1 := import("././lib.ais");
    lib2 := import("./lib.ais");
    assert(lib1 == lib2, "same libs are equal");
end

def userError()
    error("and now program should crash with this error message");
end

def main()
    variables();
    functions();
    closure();
    strings();
    arrays();
    structs();
    x := 123;
    linkedList();
    fileImportTest();
    raylibExample();
    // userError();
end

main();


